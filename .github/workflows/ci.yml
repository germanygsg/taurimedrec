name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy

    - name: Rust cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install frontend dependencies
      run: npm ci

    - name: Check frontend formatting
      run: npm run lint

    - name: Type check frontend
      run: npx tsc --noEmit

    - name: Check Rust formatting
      run: cargo fmt --all -- --check

    - name: Run Rust clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build frontend
      run: npx vite build --mode production

    - name: Build Tauri app (dry run)
      run: cargo check --manifest-path=src-tauri/Cargo.toml --all-targets --all-features

    - name: Test app build
      run: npm run tauri build -- --verbose

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ci-build-artifacts
        path: |
          src-tauri/target/release/bundle/
          src-tauri/target/release/patient-management-app*
        retention-days: 7